:READ  CHARGEIT ASSEMBLE C1 WORK    3/26/19  21:59
         MACRO                                                          00000100
&LAB     MCALL &ENTRY                                                   00000200
&LAB     L     15,=V(&ENTRY) .    LOAD BRANCH ADDRESS                   00000300
         BALR  14,15                                                    00000400
         MEND                                                           00000500
         PRINT NOGEN                                                    00000600
         EXTRN TOPNODE,HYPRTEXT                                         00000700
         EXTRN BLKSIZE,TCBMSS                                           00000800
CHARGEIT ENTER                                                          00000900
         L     1,0(1)           GET POINTER TO PARAMS                   00001000
         LH    3,0(1)           ACTUAL LEN OF PARAM LIST                00001100
         LTR   3,3              IF LEN = 0,(I.E. NO PARAM), DEFAULT     00001200
         BE    DEFAULT          USE DEFAULT VALUES                      00001300
         LA    4,0(1,3)         POINT TO NEXT TO LAST CHAR              00001400
         CLI   2(1),C','        FIRST CHAR COMMA => ONLY CJAR           00001500
         BE    ONLYCHAR         IF SO, BRANCH                           00001600
         CLI   0(4),C','        NEXT TO LAST CHAR COMMA => HAVE BOTH    00001700
         BNE   ONLYNUM          HAVE ONLY A NUMBER TO FOOL WITH         00001800
         BCTR  3,0              GET LENTH OF NUMBER = LENTH OF PARAM    00001900
         BCTR  3,0              STRING MINUS TWO                        00002000
         MVI   0(13),X'FF'      SET FLAG TO LOOK AT CHAR                00002100
ONLYNUM  LA    2,8              MAX LENTH OF FIELD                      00002200
         SR    2,3              GET INDEX ON PACK FROM FIELD            00002300
         LA    2,PARMFIEL(2)    WHERE TO MOVE PARAM INTO                00002400
         BCTR  3,0              SUB ONE FROM LEN FOR MVC                00002500
         EX    3,MOVEPARM       MOVE PARAM INTO PACK FIELD              00002600
         NI    PARMFIEL+7,X'CF'   SET SIGN = +                          00002700
         PACK  NUMWRITE+3(5),PARMFIEL+4(4)                              00002800
         CVB   5,NUMWRITE       CONVERT PARAM FROM DEC TO BIN           00002900
         LTR   5,5              IF PARAM = 0, USE DEFAULT VALUES        00003000
         BNH   SEEIFCHR         IF HE IS TRYING TO NAIL US              00003100
         CH    5,=H'80'         WANT US TO SCAN MORE THAN 80 CLO'S ?    00003200
         BH    SEEIFCHR         IF SO, KEEP AT 80                       00003300
         STH   5,INCREM+2       CHANGE INCREMENT IN A LA                00003400
SEEIFCHR CLI   0(13),X'FF'      IS THERE A CHAR AFTER THE NMUBER ?      00003500
         BNE   DEFAULT          NO, THEN BRANCH                         00003600
ONLYCHAR LH    2,0(1)           GET LENTH OF PARAM FIELD                00003700
         BCTR  2,0              DECR LENTH TO SEE IF PARAM =','         00003800
         LTR   2,2              LENTH MOW =0 IF ABOVE IS CASE           00003900
         BE    DEFAULT                                                  00004000
         SR    3,3              CLEAR FOR INSERT CHAR                   00004100
         IC    3,2(1,2)          PICK UP SPECIAL CHAR FROM PARAM STRING 00004200
*        CLEAR TABLE FIRST IN CASE BUMBLING IDIOT PASSES '<' AS PARAM   00004300
         MVI   TRANSTAB+C'<',X'00'                                      00004400
         STC   13,TRANSTAB(3)   PUT INPUT CHAR IN TRT                   00004500
DEFAULT  OPEN  (HYPRTEXT,(INOUT))    OPEN DISK DCB                      00004600
*        SET UP TCBMSS TO POINT TO BOUNDARY BOX                         00004700
         L     1,16                                                     00004800
         L     1,0(1)                                                   00004900
         L     1,4(1)                                                   00005000
         L     1,24(1)                                                  00005100
         L     2,=A(TCBMSS)     WIIL POINT TO BOUNDARY BOZ              00005200
         ST    1,0(2)                                                   00005300
         L     9,=A(BLKSIZE)    TO GET LENTH LENTH OF TRACK             00005400
         LH    9,0(9)           PUT      LENTH IN REG                   00005500
         S     9,=F'1000'       LEAVE A LITTLE BREATHING ROOM           00005600
         SR    8,8              CLEAR TOP OF DIVIDEND                   00005700
         LH    2,INCREM+2       LENTH OF INPUT ON EACH CARD             00005800
         DR    8,2              LENTH 0 LENTH OF 1 = HOW MANY           00005900
         STH   9,AFTFIRST+2    PUT NUM OF READS IN A 'LA' INSTR         00006000
*        READ IN TOPNODE AND AVS                                        00006100
         READ  NODEIN,SF,HYPRTEXT,TOPNODE                               00006200
         CHECK NODEIN                                                   00006300
*        MOVE AVS INFO INTO TAVLE                                       00006400
         L     5,=A(TOPNODE)    WHEREV TO 73=) ;¢37                     00006500
         L     6,=V(NXTHOLE)                                            00006600
         MVC   0(256,6),900(5)                                          00006700
         MVC   256(256,6),1156(5)                                       00006800
         MVC   512(256,6),1412(5)                                       00006900
         MVC   768(40,6),1668(5)                                        00007000
*        SEE IF SYSTEM IS EMPTY                                         00007100
RETRVF   MVI   BLOCK+4,X'40'         TO RETRIEVE A PAGE                 00007200
         LA    1,BLOCK         ADDRESS OF PARAMETER LIST                00007300
         MCALL MAINTAIN        TRY TO RETRIEVE                          00007400
         LTR   15,15           CHECK RETURN CODE                        00007500
         BE    NOTFIRST                                                 00007600
*        CREATE LABEL TABLE AND VF                                      00007700
         L     2,=XL4'80000008'                                         00007800
         ST    2,BLOCK+4                                                00007900
         MCALL MAINTAIN                                                 00008000
         L     3,=V(VFADD)                                              00008100
         L     4,BLOCK+8                                                00008200
         ST    4,0(3)                                                   00008300
         XC    0(8,4),0(4)             ZERO THE VERSION FILE            00008400
         MVI   3(4),X'04'              LENTH OF VF(  WORD WITH LENTH)   00008500
         OI    BLOCK+3,X'01'                                            00008600
         MCALL MAINTAIN                                                 00008700
         L     4,BLOCK+8                                                00008800
         L     3,=V(LABTABAD)  ADD OF WHERE ADD OF LABLE TABLE IS STORE 00008900
         ST    4,0(3)          PUT LABEL TABLE ADD IN LABTABAD          00009000
         XC    0(8,4),0(4)             ZERO THE LABRL TABLE             00009100
         MVI   3(4),X'04'              DISP TO WHERE NEXT ENTRY GOES    00009200
         B     CLRBLCK                                                  00009300
         EJECT                                                          00009400
*        SET UP COUNTER                                                 00009500
*        SAVE ADDRESS OF VF                                             00009600
NOTFIRST L     2,BLOCK+8               ADDRESS OF VF                    00009700
         L     3,=V(VFADD)                                              00009800
         ST    2,0(3)                                                   00009900
          A     2,0(2)    R2 NOW POINTS TO WHERE COUNTER STORED         00010000
         L     4,0(2)              GET COUMTER                          00010100
         L     3,=V(COUNTER)           ADDRESS OF COUNTER USED FOR LABE 00010200
         ST    4,0(3)              PUT IT IN 'COUNTER'                  00010300
*               (TO P OF VF + LENTH OF ACTUAL VF )                      00010400
          EJECT                                                         00010500
BEGCALL  MCALL CREATEID                                                 00010600
*        SET UP PROPER INCRMENTS FOR GETITEM                            00010700
         L     2,INCR             PICK UP STANDARD INCREMANT            00010800
         ST    2,BLOCK+8                                                00010900
*        GET NAME OF PAGE JUST CREATED FOR GETITEN                      00011000
         L     1,=V(SCANNER)                                            00011100
         L     2,0(1)                                                   00011200
         ST    2,BLOCK+4                                                00011300
         LA    1,BLOCK                                                  00011400
         MCALL GETITEM                                                  00011500
*        GET ADDRESS OF FIRST ORDER                                     00011600
         L     3,BLOCK+12                                               00011700
         LA    3,12(3)                                                  00011800
*        GET ADDRESS OF TOP OF DATA SECTION                             00011900
         L     4,BLOCK+16                                               00012000
         LA    4,16(4)                                                  00012100
         LH    12,INCR            ORDERS PAGE INCREMENT                 00012200
         LA    12,8(3,12)         +8 FOR ALREADY EXISTING ORDER         00012300
         NOP   AFTFIRST         ***** SWITCH TO PUT LABEL ONLY IN       00012400
*                                 FIRST PAGE ***************            00012500
         MVI   *-3,X'F0'                                                00012600
         ST    2,PAGE1            SAVE NAME OF FIRST PAGE               00012700
         MVI   BLOCK+9,X'08'      CHANGE (REDUCE) ORDERS INCREMENT      00012800
         OPEN  (INPUT,(INPUT))                                          00012900
         GET   INPUT,CARD                                               00013000
         MVI   0(3),X'06'         LABEL CODE                            00013100
         MVC   1(6,3),CARD        MOVE IN LABEL                         00013200
         MVI   7(3),X'06'                                               00013300
         LA    3,8(3)                                                   00013400
         STM   1,9,SAVER           BECAUSE I FORGET WHAT GETS CLOBBERED 00013500
         BAL   9,ENTLAB        ENTER LABEL INTO 'SORTED' TABLE          00013600
         LM    1,9,SAVER           RELOAD REGS                          00013700
         EJECT                                                          00013800
AFTFIRST LA    5,80             DUMMY NUMBER OF READS; REAL NUM COMPUTE 00013900
*                               FROM MARTY'S BLKSIZE                    00014000
         SR    6,6                                                      00014100
         ST    4,SAVER         SAVE WHERE CUR STRING STARTS             00014200
GET      GET   INPUT,(4)                                                00014300
INCREM   LA    9,80             LENTH OF RECORDS COMING IN              00014400
         SR    1,1              CLEAR TOP BYTE                          00014500
         BCTR  9,0              BECAUSE OF HOW TRT USES LENTH           00014600
         EX    9,TRT            SCAN CARD FOR DELITER                   00014700
         BE    INCRADD          OH GOODY, NO DELIMITERS                 00014800
         SR    1,4              R1 HAS LENTH UP TO MARKER               00014900
         AR    6,1              OLD LEN + LEN TO DELIM = LEN OF ORDER   00015000
         LA    4,1(4,1)         POINT AT CHAR JUST PAST DELIM           00015100
         BE    ZIPLEN             IF CHAR STRING ORDER LEN = 0, BRANCH  00015200
         LA    15,12              NUM OF BYTES OF ORDERS WANT TO ADD    00015300
         BAL   2,CLOBBER          SEEE IF WE WILL RUN OF END OF PAGE    00015400
         MVC   0(8,3),STANDORD  MOVE IN A COPY OF AN ORDER              00015500
         STH   6,2(3)           PUT LENTH IN ORDER                      00015600
         NI    0(3),X'7F'       CLEAR TOP BIT (LAST ORDER BIT)          00015700
         L     15,SAVER     R15 => START OF CUR STRING                  00015800
         S     15,BLOCK+16           MINUS ADDR OF TOP OF DATA PAGE     00015900
         S     15,=F'12'         MINUS PAGE HEADER LEN = DISP TO STRING 00016000
         STH   15,4(3)            PUT DATA DISP IN ORDER                00016100
         MVC   8(4,3),=X'0A1B000A'      MOVE IN PARACAP ORDER           00016200
         LA    3,12(3)          NEW ORDERS INDEX                        00016300
         SR    6,6                HAVE A ZERO LENTH STRING NOW          00016400
RESETREG SR    9,1                MINUS LEN MOVED = LEN LEFT TO CHECK   00016500
*        BCTR  9,0                MINUS 1 FOR DELIN (DONE BEFORE TRT)   00016600
         ST    4,SAVER         SAVE WHERE CUR STRING STARTS             00016700
         LTR   9,9              IF NOTHING LEFT TO LOOK AT, LEAVE       00016800
         BH    INCREM+4           OH WELL, KEEP SEARCHING               00016900
         B     INCRADD+8        DON'T BOTHER INCREMENTING STUFF         00017000
INCRADD  LA    4,1(4,9)         NEW WHEER TO READ INTO POINTER          00017100
         LA    6,1(6,9)         NEW LWNTH OF CURERNT ORDER              00017200
         BCT   5,GET                                                    00017300
         BAL   7,SETUPAG          SET UP ORDERS AND PAGE LEN            00017400
         B     BEGCALL                                                  00017500
         SPACE 4                                                        00017600
SETUPAG  LA    15,8               NUM OF BYTES WORTH OF ORDERS WANT TO  00017700
         BAL   2,CLOBBER          SEE IF WILL RUN OFF END OF PAGE       00017800
         MVC   0(8,3),STANDORD    MOVE IN CHAR STRING ORDER             00017900
         STH   6,2(3)                                                   00018000
*        SET UP DISP TO STRING ON PAGE                                  00018100
         L     15,SAVER                                                 00018200
         S     15,BLOCK+16        MINUS TOP OF PAGE ADDRESS             00018300
         S     15,=F'12'          MINUS PAGE HEADER LENTH               00018400
         STH   15,4(3)            STORE DISP IN ORDER                   00018500
         LA    3,8(3)                                                   00018600
         LM    1,2,BLOCK+12                                             00018700
         SR    3,1                                                      00018800
         ST    3,4(1)                                                   00018900
         SR    4,2                                                      00019000
         ST    4,4(2)                                                   00019100
         S     4,=F'12'                                                 00019200
         ST    4,12(2)                                                  00019300
         BR    7                                                        00019400
ZIPLEN   LA    15,4               WANT TO ADD ONLY PARA (CHAR ORD LEN = 00019500
         BAL   2,CLOBBER          SEE IF WILL RUN OFF PAGE              00019600
         MVC   0(4,3),=X'0A1B000A'                                      00019700
         LA    3,4(3)             INCREMENT ORDERS POINTER              00019800
         B     RESETREG           FIX UP REGS AND KEEP SCANNING         00019900
CLOBBER  LA    15,0(15,3)         WHERE ORDERS POINTER WILL BE AFTER AD 00020000
         CR    15,12              PAST END OF PAGE ?                    00020100
         BNHR  2                  IF NOT, RETURN C  NOW                 00020200
         S     3,BLOCK+12         GET DISP ON ORDERS APGE               00020300
         S     4,BLOCK+16         GET DISP ON DATA PAGE                 00020400
         S     12,BLOCK+12        GET NUM OF BYTES INCR ALREADY ADDED   00020500
         MVC   BLOCK+8(4),=X'00400000'    ONLY INCR ORDERS PAGE         00020600
         LR    11,1               SAVE REG 1                            00020700
         LA    1,BLOCK            ¢  R1 => PARAM LIST                   00020800
         MCALL GETITEM                                                  00020900
         LR    1,11               RESTIRE REG 1                         00021000
         A     3,BLOCK+12         ORDERS DISP + ADD OF TOP OF PAGE      00021100
         A     4,BLOCK+16         DATA DISP + ADDR TOP OF DATA PAGE     00021200
         A     12,BLOCK+12        INCR DISP + UOP OF ORDERS PAGE        00021300
         LA    12,X'40'(12)       INCREMENT INCREM REG                  00021400
         BR    2                  RETURN                                00021500
         EJECT                                                          00021600
EOFSYSIN BAL   7,SETUPAG                                                00021700
         L     1,=V(VFADD)                                              00021800
         L     1,0(1)                                                   00021900
         CLC   5(3,1),PAGE1+1                                           00022000
         LA    1,4(1)                                                   00022100
         BNE   *-10                                                     00022200
         NI    0(1),X'7F'                                               00022300
         CLC   1(3,1),BLOCK+5                                           00022400
         LA    1,4(1)                                                   00022500
         BNE   *-14                                                     00022600
         S     1,=F'4'                                                  00022700
         OI    0(1),X'80'                                               00022800
         SPACE 2                                                        00022900
*        PUT EVERYTHING IN IDTABLE BACK OUT ON DISK                     00023000
         L     2,=V(IDTABLE)                                            00023100
         MVI   BLOCK+4,X'60'                                            00023200
         LA    1,BLOCK                                                  00023300
         CLI   0(2),X'FF'                                               00023400
         BE    COMPDONE                                                 00023500
STORLOOP L     3,0(2)     GET PAGE NAME OUT OG IDTABLE                  00023600
         L     4,4(2)                                                   00023700
         BAL   8,STORER            STORE ORDERS PAGE ON DISK            00023800
         L     4,8(2)                                                   00023900
         LA    3,1(3)                                                   00024000
         BAL   8,STORER            STORE DATA PAGE ON DISK              00024100
         MVI   0(2),X'FF'           SET EMPTY TABLE FLAG                00024200
         TM    4(2),X'80'              IS THIS THE END OF TABLE?        00024300
         BO    COMPDONE                IF IT OS, BRANCH                 00024400
         LA    2,12(2)                                                  00024500
         B     STORLOOP                                                 00024600
         SPACE 2                                                        00024700
STORER   C     3,0(4)               NAME FROM IDTABLE VS NAME AT TOP OF 00024800
         BNE   GOODY                IF HAVE WRONG PAGE, BOMB OUT        00024900
         ST    3,BLOCK              PUT PAGE NAME IN PARAM LIST FOR MAI 00025000
         L     4,4(4)               LENTH OF PAGE(FROM ACTUAL PAGE)     00025100
         STH   4,BLOCK+6            STORE LEN IN PARAM LIST             00025200
         MCALL MAINTAIN             CALL ROUTINR TO PASS PAGE OUT OF CO 00025300
         BR    8                   RETURN TO CALLER                     00025400
         EJECT                                                          00025500
         SPACE 1                                                        00025600
GOODY    ABEND 10,DUMP                                                  00025700
COMPDONE SR    2,2                                                      00025800
         ST    2,BLOCK                                                  00025900
         L     3,=V(VFADD)                                              00026000
         L     3,0(3)                                                   00026100
         L     4,0(3)              LENTH OF VF                          00026200
         LR    5,3                 SAVE IT                              00026300
         AR    5,4                 POINTS TO WHERE NEXT ENTRY GOES      00026400
         L     3,=V(COUNTER)      GET NEXT ID NAME                      00026500
         L     3,0(3)                                                   00026600
         ST    3,0(5)          PUT COUNTER IN VF                        00026700
         LA    4,4(4)              INCREMENT LENTH FOR VF(COUNTRE)      00026800
         STH   4,BLOCK+6                                                00026900
         MCALL MAINTAIN                                                 00027000
         L     3,=V(LABTABAD)          ADD OF ADD                       00027100
         L     2,0(3)                  GET ADDRESS OF LABEL TABLE       00027200
         L     2,0(2)          GET LENTH OF LABEL TABLE                 00027300
         STH   2,BLOCK+6               LENTH TO STORE                   00027400
         OI    BLOCK+3,X'01'     LABEL TABLE NAME= 0000001              00027500
         MCALL MAINTAIN                STORE LABEL TABLE                00027600
         L     10,=A(TOPNODE)                                           00027700
         L     12,=V(NXTHOLE)                                           00027800
         MVC   900(256,10),0(12)                                        00027900
         MVC   1156(256,10),256(12)                                     00028000
         MVC   1412(256,10),512(12)                                     00028100
         MVC   1668(40,10),768(12)                                      00028200
         L     10,=V(HYPRTEXT)                                          00028300
         MVC   33(3,10),=AL3(CLOSE)                                     00028400
         LA    6,256                                                    00028500
         ST    6,CARD                                                   00028600
         POINT (10),CARD                                                00028700
         WRITE NODEOUT,SF,HYPRTEXT,TOPNODE                              00028800
         CHECK NODEOUT                                                  00028900
               EJECT                                                    00029000
         GETMAIN R,LV=7200                                              00029100
         LR    2,1                                                      00029200
SEEKEND  READ  LOOPREAD,SF,HYPRTEXT,(2)                                 00029300
         CHECK LOOPREAD                                                 00029400
         B     SEEKEND                                                  00029500
CLOSE    CLOSE (HYPRTEXT,,INPUT)                                        00029600
         L     13,4(13)                                                 00029700
         RETURN (14,12)                                                 00029800
         SPACE 5                                                        00029900
ENTLAB   LA    1,12         INCREMENT TO LABEL TABLE                    00030000
         MCALL GETTAB                                                   00030100
         LR    2,1              LOAD PTR TO TOP OF LABTABLE             00030200
         A     1,0(1)           POINT TO BOTTOM OF LABTABLE             00030300
         LR    4,1                                                      00030400
         L     3,0(2)           LOAD LENGTH OF LABTABLE                 00030500
         LA    3,12(3)          INCREMENT BY 3 WORDS                    00030600
         ST    3,0(2)           STORE NEW LENGTH BACK INTO FIRST WORD   00030700
         LA    2,4(2)           POINT TO FISST LABEL IN TABLE           00030800
CHEKTOP  CLC   LABEL(6),0(2)                                            00030900
         BC    4,BISECTED+4     BRANCH IF NEW LABEL BELONGS AT TOP      00031000
*        WHENEVER CONTROL PASSES TO BISECTAB, R1 POINTS TO LOWERLABEL,  00031100
*        AND R2 TO HIGHER LABEL OF INTERVAL TO BE BISECTED.             00031200
BISECTAB ST    1,SAVEPTR        SAVE LOW PTR IN CASE LABEL BELONGS IN L 00031300
         SR    1,2              COMPUTE LENGTH IN BYTES OF INTERVAL     00031400
         SR    0,0                                                      00031500
         D     0,TWENTY4 BISECT IN TERMS OF 12 BYTES, AS EACH ITEM IS   00031600
         LTR   1,1              IS TOLERANCE MET?                       00031700
         BC    8,BISECTED       BRANCH IF BISECTION COMPLETED           00031800
         MH    1,TWELVE         CONVERT ITEMS QUOTIENT INTO BYTES       00031900
         AR    2,1              POINT TO MIDDLE LABEL OF INTERVAL       00032000
         CLC   LABEL(6),0(2)    COMPARE LABELS                          00032100
         BC    4,UPPER            BRANCH IF LABEL GOES IN UPPER HALF    00032200
         L     1,SAVEPTR        IF GOES IN LOWER, RESET R1 PTR          00032300
         B     BISECTAB                                                 00032400
UPPER    SR    2,1              POINT TO HIGHER LABEL OF NEW INTERVAL   00032500
         AR    1,2              POINT TO LOWER LABEL OF NEW INTERVAL    00032600
         B     BISECTAB                                                 00032700
BISECTED LA    2,12(2)                                                  00032800
         CLR   2,4                                                      00032900
         BC    10,PUTINLAB      BRANCH IF NO MOVING OF LABELS IS NEEDED 00033000
         L     5,=V(DISPLAY)                                            00033100
         LA    5,10(5)          POINT TO SCRATCH AREA                   00033200
         LA    6,255            R6 CONTAINS A BYTE LENGTH FOR EXECUTES  00033300
         LA    1,MOVELOOP                                               00033400
MOVELOOP SH    4,=H'256'                                                00033500
         CLR   2,4                                                      00033600
         BC    4,DODROP         BRANCH IF HAVE AT LEAST 256 BYTES TO    00033700
         LA    1,PUTINLAB                                               00033800
         AR    6,4                                                      00033900
         SR    6,2              R6 CONTAINS NUM OF BYTES LEFT TO BE     00034000
         LR    4,2              POINT TO AREA TO BE MOVED               00034100
DODROP   EX    6,DROPTAB        MOVE FROM LABEL TABLE TO SRATCH AREA    00034200
         EX    6,DROPTAB+6      MOVE FROM AREA BACK TO TABLE, 12 BYTES  00034300
         BR    1                                                        00034400
DROPTAB  MVC   0(1,5),0(4)                                              00034500
         MVC   12(1,4),0(5)                                             00034600
PUTINLAB MVC   0(6,4),LABEL     PUT NEW LABEL INTO TABLE                00034700
         MVC   8(4,4),POINT        PUT PAGE OF LABEL INTO TABLE         00034800
         BR    9                                                        00034900
SAVEPTR  DS    F                                                        00035000
TWENTY4  DC    F'24'                                                    00035100
TWELVE   DC    H'12'                                                    00035200
NUMWRITE DC    D'0'                                                     00035300
PARMFIEL DC    8X'F0'           X'0' IN CHAR FORM                       00035400
INPUT    DCB   DDNAME=SYSIN,DSORG=PS,EODAD=EOFSYSIN,MACRF=(GM)          00035500
PAGE1    DS    F                                                        00035600
INCR     DC    H'64',H'6400'                                            00035700
CARD     DS    80C                                                      00035800
STANDORD DC    X'8100000000040001'                                      00035900
         DC    V(BEGIN)                                                 00036000
BLOCK    DC    5F'0'                                                    00036100
TRANSTAB DC    256X'00'         USED 3O SEARCH INPUT FOR DELIMITER      00036200
         ORG   TRANSTAB+C'<'      STOP TRT AT DELIMITER                 00036300
         DC    X'01'                                                    00036400
         ORG                                                            00036500
TRT      TRT   0(0,4),TRANSTAB      USED TO SCAN INPUT                  00036600
MOVEPARM MVC   0(0,2),2(1)      USED BY EX TO MOVE PARM TO BE PACKED    00036700
LABEL     EQU   CARD        SO ENTLAB WILL FIND LABEL                   00036800
POINT    EQU   PAGE1         SO ENTLAB WILL FIND PAGE NAME              00036900
CLRBLCK  EQU   BEGCALL                                                  00037000
SAVER    DS    9F                                                       00037100
         LTORG                                                          00037200
         END   CHARGEIT                                                 00037300
