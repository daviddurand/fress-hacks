:READ  MODIFY   ASSEMBLE C1 WORK    3/26/19  22:00
         MACRO                                                          00000100
&LAB     MCALL &ENTRY                                                   00000200
&LAB     L     15,=V(&ENTRY)                                            00000300
         BALR  14,15                                                    00000400
         MEND                                                           00000500
         PRINT NOGEN                                                    00000600
****** MODIFY *********                                                 00000700
         SPACE 1                                                        00000800
** MOIDFIES DATA STRUCTURE                                              00000900
***  TAKES ALL NECESSARY INFORMATION FOR MODIFY IN OTYPE, ETC. AREA     00001000
*** CALLS SPACEORD TO MAKE ROOM IN DATA STRUCTUE FOR INSERT             00001100
**  CALLS SPECIFIC INSERT ROUTINE: LABEL, STRING, LINK                  00001200
         SPACE 1                                                        00001300
MODIFY  CSECT                                                           00001400
         B     84(15)                                                   00001500
         DC    AL1(7)                                                   00001600
     DC   CL7'MODIFY'                                                   00001700
MODSAV        DC   18F'0'                                               00001800
          STM  14,12,12(13)                                             00001900
      LR    14,13                                                       00002000
             LA    13,12(15)                                            00002100
       USING    MODSAV,13                                               00002200
         ST    13,8(14)                                                 00002300
         ST    14,4(13)                                                 00002400
         LA    2,TYPE        CONTAINS LENTHS OF DIFFERENT ORDERS        00002500
         LA    3,OTYPE         CONTAINS TYPE OF DS CHANGE               00002600
         MCALL GETID                                                    00002700
         CLI   OTYPE+3,X'FF'     CHECK FOR DELETE OP CODE               00002800
         BE    DEL               GOT TO DELETE IF SET                   00002900
        CLI   OTYPE+3,7          IS THIS A BIG INSERT ?                 00003000
        BE    REARRNG            IF SO, BRANCH                          00003100
         L     3,OTYPE           GET THE TYPE OF INSERT (THE ORDER NO.) 00003200
         SLL   3,2               MULTIPLY BY 4 FOR BRANCH TABLE         00003300
         L     3,TYPE(3)         GET LENGTH OF INSERT-TYPE IN R3 FORMVC 00003400
         MCALL SPACEORD      MOVES ORDERS, RETURNS INSERT POINT IN R6   00003500
         L     3,OTYPE                                                  00003600
         SLL   3,2                                                      00003700
         L     3,TYPE1(3)      GET ADDRESS OF SPECIFIC ROUTINE          00003800
         BR    3               GO TO THAT ROUTINE                       00003900
         SPACE 3                                                        00004000
*** STRING                                                              00004100
*     FOR CHARACTER STRING AND TAG INSERTS                              00004200
*     CREATES ORDER AND INSERTS IT IN DS                                00004300
         SPACE 1                                                        00004400
STRING   MCALL STRGINS       INSERTS STRING IN DATA, RETURNS IN ¢ R7 DA 00004500
         LH    10,OSTRING        GET LENTH OF INSERTED STRING           00004600
         L     0,OTYPE           GET ORDER CODE IN LOWER BYTE           00004700
         STH   10,2(6)                 PUT LENGTH IN ORDER-BYTE2 BAD?   00004800
         STC   0,0(6)            PUT IN ORDER CODE                      00004900
         ST    0,4(6)            PUT CODE IN LAST BYTE                  00005000
         STH   7,4(6)            DATA DISPLACEMENT                      00005100
RET1     L     5,=V(LAST)        IF LAST ORDER HIT,                     00005200
         OC    0(1,6),0(5)       ** PUT IN LAST BIT                     00005300
RET3     L     3,=V(ORDERS)                                             00005400
         L     5,=V(BLKSIZE)         ADDR OF MAX LEN OF A PAGE          00005500
        L     4,4(3)                  GET DDRESS OF DATA ID ITEM        00005600
         CLC   6(2,4),0(5)       SEE IF DATA PAGE IS NOW TOO LONG       00005700
         BNL   SCRUNCH                 IF TOO LONG, SCRUNCH THE DATA ST 00005800
         L     4,0(3)              ADDRESS OF ORDERS ID                 00005900
         CLC   6(2,4),0(5)       SEE IF ORDERS PAGE TOO LONG            00006000
         BNL   SCRUNCH                                                  00006100
RET2     L     13,4(13)                                                 00006200
         RETURN (14,12)                                                 00006300
         SPACE 5                                                        00006400
***** LINK                                                              00006500
** FOR LINK OR BRANCH ORDERS                                            00006600
* INSERTS A LINK ORDER IND DS                                           00006700
LINK     MCALL  STRGINS     PUT EXPL ON DATA PAGE, DATA DISP RET IN R7  00006800
         L     0,OTYPE           GET ORDER CODE IN LOWER BYTE           00006900
         ST    7,0(6)            DATA DISPLACEMENT                      00007000
         LH    1,OSTRING         LENTH OF EXPLAINER                     00007100
         STH   1,0(6)            PUT LENTH OF EXPL IN ORDER             00007200
         STC   0,0(6)            PUT IN ORDER CODE                      00007300
         ST    0,8(6)            PUT ORDER CODE IN LOWER BYTE           00007400
         MVC   4(6,6),OLABEL     LABEL TO LINK TO                       00007500
         B     RET1                                                     00007600
         SPACE 5                                                        00007700
*** LABEL                                                               00007800
* INSERTS A LABEL ORDER INTO DS                                         00007900
         SPACE 1                                                        00008000
LABEL    MVI   0(6),X'06'     ORDER CODE                                00008100
         MVC   1(6,6),OLABEL      LABEL                                 00008200
         MVI   7(6),X'06'       ORDER CODE                              00008300
         OC    0(1,6),OLABEL+7   SET BIT IF INTERNAL LABEL              00008400
         B     RET1                                                     00008500
         SPACE 3                                                        00008600
PARAORD  DC    XL4'07000007'                                            00008700
         SPACE 3                                                        00008800
TAG      L     0,OSTRING               GET TYPE IN BOTTOM BYTE          00008900
         STC   0,1(6)                  PUT TYPE BYTE IN THE ORDER       00009000
         B     STRING                  PUT TOGETHER REST OF ORDER       00009100
         SPACE 2                                                        00009200
FORM     MVC   0(4,6),FORMORD          MOVE IN ORDER TYPE = 0A          00009300
         L     4,OSTRING               FOR TYPE AND NUMBER              00009400
         STC   4,1(6)                  STORE TYPE                       00009500
         SRL   4,8                     MOVE NUMBER OVER                 00009600
         STC   4,2(6)                  STORE NUMBER                     00009700
         B     RET1                                                     00009800
FORMORD  DC    X'0A00000A'                                              00009900
         SPACE 3                                                        00010000
         EXTRN DISPLAY                                                  00010100
REARRNG  L     10,=A(DISPLAY+10)    WHERE TO PICK UP SCRUNCH OUTPUT     00010200
        USING DATADD,10          ESTABLISH DSECT ADDRESS                00010300
         L     3,ORDLEN           PICK UP LENTH OF THIS GRP OF ORDERS   00010400
         LTR   3,3                     IF TOTAL ORDERS LEN = 0, THEN    00010500
         BE    GETNEXT            DON'T MOVE ANYTHING                   00010600
         ST    3,OLABEL                SAVE ORIG LEN OF ORDERS IN BLOCK 00010700
        ST    10,SAVE            SAVE ADDR OF GRP HEAD                  00010800
        MCALL SPACEORD           OPEN UP ORDERS A LITTLE                00010900
        LR    11,6               SAVE ADDR OF INSERTION POINT           00011000
         L     10,SAVE                 GET ADDR OF CBLOVCK HEAD         00011100
LENCHK  CH    3,=H'256'          MAX LEN IN ONE MOVE                    00011200
        BNH   LASTMOVE           GO IF LESS OR = 256 TO MOVE            00011300
         MVC   0(256,6),16(10)                                          00011400
        LA    6,256(6)                                                  00011500
        LA    10,256(10)                                                00011600
         SH    3,=H'256'                                                00011700
        B     LENCHK                                                    00011800
MOVEREST MVC   0(0,6),16(10)                                            00011900
LASTMOVE LTR   3,3                LEN = 0 ?                             00012000
        BE    DONE                                                      00012100
        BCTR  3,0                DECR LEN FOR MVC                       00012200
        EX    3,MOVEREST                                                00012300
DONE     L     10,SAVE            PICK ADDR OF BLOCK HEAD               00012400
         SR    1,1                ZERO                                  00012500
         TM    0(11),X'01'        SEE IF SHOULD ADJUST DATA DISP        00012600
         BZ    *+8                BRANCH IF NOT                         00012700
         LH    1,4(11)            DATA DISP OF FIRST ORDER              00012800
         L     3,DATLEN           LEN OF SCRUNCHED DATA OF BLOCK        00012900
         SR    3,1                DATA SEC LEN - DISP OF FIRST ORDER =  00013000
*                                 HOW LONG REAL DATA SEC IS             00013100
         STH   3,OSTRING     PLACE IN PARAM AREA FOR STRGINS            00013200
         L     3,DATADD           PICK UP ADDR OF HEAD OF DATA          00013300
         AR    3,1                TOP OF DATA SEC + FIRST DATA DUSP =   00013400
*                                 WHERE DATA SECTION REALLY STARTS      00013500
         ST    3,OSTRING+4   PUT IN PARAM AREA FOR STRGINS              00013600
         MCALL STRGINS            PUT DATA ON DATA PAGE                 00013700
********       STRGINS RETURNS IN R7 DATA DISP OF STRING JUST INSERTED  00013800
         MVI   ENDCHK+1,X'F0'     SET NOP TO BRANCH                     00013900
         SR    7,1                MINUS DATA DISP OF FIRST ORDER        00014000
*        THIS COMPENSATES FOR ONLY MOVING THOSE STRINGS THAT ARE        00014100
*              ACTUALLY REFERENCED                                      00014200
         LR    14,7          SAVE DISP ON PAGE OF START OF BLOCK        00014300
RESETLOP TM    0(11),X'80'        LAST ORDER IN BLOCK ?                 00014400
         BZ    *+14                     IF NOT, DON'T CHANGE BRANCH     00014500
         NI    0(11),X'7F'        CLAER LAST ORDER FLAG                 00014600
         MVI   ENDCHK+1,0         SET TO NOP                            00014700
         LR    15,11                    SAVE POINTER TO LAST ORDER IN   00014800
         CLI   0(11),X'0A'        SIMPLE FORMAT ?                       00014900
         BE    NOSTRG             BRANCH ID SO                          00015000
         AH    7,4(11)            DATA DISP ON PAGE + DATA DISP IN SCRU 00015100
         STH   7,4(11)            RESET DATA DISP IN ORDER              00015200
         LH    6,2(11)            LENTH OF DSTRING IN CASE THIS LAST    00015300
         LR    7,14          RESET DISP TO HEAD OF CURRENT BLOCK OF DAT 00015400
         LA    11,8(11)           INCREMENT ORDERS PIONTER              00015500
ENDCHK   B     RESETLOP           **** NOP/BRANCH ON LAST ORDER ******* 00015600
         L     3,OLABEL                GET LENTH OF ORDERS IN BLOCK JUS 00015700
         ST    6,OPOINT1+8        RESET DISP IN ORDER OF INSERT POINT   00015800
         LR    6,15               >AVE POINTER TO LAST POINTER MOVED IN 00015900
*                                (WANT TO SET HIGH ORDER BIT MAYBE)     00016000
         L     14,=V(ORDERS)            R14 => ADDR OF ORDERS PAGE      00016100
         L     1,0(14)                  R1 => ORDERS PAGE               00016200
         SR    15,1                     DISP ON PAGE OF LAST ORDER I BL 00016300
         S     15,=F'12'                GET OUR TYPE DISP ON ORDERS PAG 00016400
         ST    15,OPOINT1+4             DISP ON PAGE OF NEXT INSERT     00016500
         L     5,=V(LAST)              WHERE FLAF STORED TEMPORARILY    00016600
         OC    0(1,6),0(5)             SET LAST ORDER BIT IF SUPPOSED T 00016700
GETNEXT  L     10,NXTGRP               ADDR OF NEXT BLOCK OF ORDERS     00016800
         LTR   10,10              IF = 08 THEN AM AT END                00016900
         BNE   REARRNG+4          IF NEXT BLOCK THERE, LOOK AT IT       00017000
         B     RET3                    ALL DONE, GO SEE IF PAGE TOO BIG 00017100
NOSTRG   LA    11,4(11)           INCREMENT ORDERS POINTER (SIMP FORM)  00017200
         SR    6,6                DISP IN ORDER = 0                     00017300
         B     ENDCHK             SEE IF DOME                           00017400
         SPACE 1                                                        00017500
DEL      MCALL  DELETE                                                  00017600
         B     RET3                                                     00017700
         SPACE 1                                                        00017800
SCRUNCH  MCALL SCRUNCH                                                  00017900
         B     RET2                                                     00018000
**** DATA FOR MODIFY MAINLINE **                                        00018100
TYPE     DC    F'4,8,12,12,4,8,8,4,8,8,4'                               00018200
TYPE1    DC    A(0,STRING,LINK,LINK,0,TAG,LABEL,0,STRING,TAG,FORM)      00018300
         SPACE 1                                                        00018400
SAVE     DC    F'0'               KEEPS POINTER TO BLOCK HEAD           00018500
*  ALL INFORMATION FOR MODIFY PASSED TO IT                              00018600
OTYPE    DC    F'0'              WORD FOR ORDER TYPE                    00018700
OPOINT1  DC    3F'0'             INSERRT POINT                          00018800
OLABEL   DC    2F'0'             LABEL, + BYTE FOR INTERNAL FLAG        00018900
OSTRING  DC    2F'0'                                                    00019000
         ENTRY OTYPE,OPOINT1,OLABEL,OSTRING                             00019100
         LTORG                                                          00019200
BLOCK    DSECT                                                          00019300
DATADD   DS    F                  POINTER TO DATA FOR BLOCK             00019400
ORDLEN   DS    F                  LENTH OF ORDERS IN THIS BLOCK         00019500
DATLEN   DS    F                  LENTH OF DATA FOR THIS BLOCK          00019600
NXTGRP   DS    F                  POINTER TO NEXT BLOCK                 00019700
         END                                                            00019800
