:READ  STEP5    ASSEMBLE C1 WORK    3/26/19  22:00
FOREAL   CSECT                                                          00000100
         PRINT GEN                                                      00000200
         SAVE  (14,12),,*                                               00000300
         BALR  8,0                                                      00000400
          USING  *,8                                                    00000500
         B     STARTSAV                                                 00000600
* EQUEATES FOR REG NUMONICS                                             00000700
R3       EQU   3                                                        00000800
R4       EQU   4                                                        00000900
R5       EQU   5                                                        00001000
R6       EQU   6                                                        00001100
R7       EQU   7                                                        00001200
R8       EQU   8                                                        00001300
R9       EQU   9                                                        00001400
R10      EQU   10                                                       00001500
R11      EQU   11                                                       00001600
H        EQU   2                                                        00001700
L        EQU   4                                                        00001800
A        EQU   15                                                       00001900
E        EQU   8                                                        00002000
HIGH     DS    30C                                                      00002100
LOW      DS    30C                                                      00002200
TINPUT   DS    CL50                BUFFER FOR 1052                      00002300
TLAST    EQU   *-1                                                      00002400
OUTPUT   DS    CL132               BUFFER FOR 1403                      00002500
BUFF1    DS    CL132               BUFFER FOR 2400                      00002600
BUFFER1  DC    A(BUFF1)                                                 00002700
PR1CCW   EQU   OUTPUT                                                   00002800
ECB1     DC    X'00000000'                                              00002900
         DS    0F                                                       00003000
SAVNEXT  DS    18F                                                      00003100
STARTSAV ST    13,SAVNEXT+4                                             00003200
         LA    13,SAVNEXT                                               00003300
START    MVI   TINPUT,X'40'        CLEAR MESSAGE AREA                   00003400
         MVC   TINPUT+1(49),TINPUT                                      00003500
         MVI   HIGH,C'0'           SET STACK HIGH AND LOW TO            00003600
         MVC   HIGH+1(29),HIGH     ZERO                                 00003700
         MVI   LOW,C'0'            LOW TO ZERO                          00003800
         MVC   LOW+1(29),LOW                                            00003900
         MVI   CONDBIT,X'00'       SET CONDITION BIT TO ZERO            00004000
         MVC   ECB1,ZERO                                                00004100
         WTOR  'INPUT PLEASE',TINPUT,50,ECB1                            00004200
         WAIT  ECB=ECB1                                                 00004300
GOT      LA    R9,TINPUT-1         INITIALIZE R9 TO BUFFER1 -1          00004400
         LA    R7,HIGH             LOAD R7 WITH HIGH POINTER            00004500
         LA    R6,LOW              LOAD R6 WITH LOW POINTER             00004600
         L     R10,ZERO            CREATE ZERO REG                      00004700
         L     R5,ZERO             INITIALIZE 5 TO ZERO                 00004800
         MVI   GETAPE+1,X'00'      SET BRANCH TO NOP                    00004900
         MVI   OP+1,X'00'          SET BRANCH TO NOP                    00005000
         MVI   CFILE+1,X'00'                                            00005100
         MVI   BRANCH3+1,X'00'                                          00005200
         LA    R11,1(0,R10)        LOAD REG 11 WITH 1                   00005300
CHARCOM  LA    R9,1(0,R9)          START INPUT SCAN                     00005400
         C     R9,ETINPUT          TEST FOR INPUT OVER FLOW             00005500
         BH    ERROR                                                    00005600
         CLI   0(R9),C'0'          COMPARE FOR PAGE NO                  00005700
         BC    H+E,NUMB+8                                               00005800
         CLI   0(R9),C'D'          TEST FOR DOUBLE                      00005900
         BC    L+H,*+12                                                 00006000
         OI    CONDBIT,X'01'       SET BIT FOR DOUBLE SPACE             00006100
         BC    A,CHARCOM                                                00006200
         CLI   0(R9),C'C'          TEST FOR CHANGED PAGE                00006300
         BC    L+H,*+12                                                 00006400
         OI    CONDBIT,X'02'       SET BIT FOR CHANGED PAGES            00006500
         BC    A,CHARCOM                                                00006600
         CLI   0(R9),C'S'          TEST FOR MARGIN SUPPRESS             00006700
         BC    L+H,*+12                                                 00006800
         OI    CONDBIT,X'04'       SET BIT FOR SUPPRESS                 00006900
         BC    A,CHARCOM           CONTROL                              00007000
         CLI   0(R9),C','          TEST FOR COMMA                       00007100
         BC    E,CHARCOM                                                00007200
         CLI   0(R9),C'N'          CHECK FOR NONE                       00007300
         BE    ENDTAPE                                                  00007400
         CLI   0(R9),C'A'          TEST FOR TAPE DRIVE2                 00007500
         BE    CHARCOM                                                  00007600
         CLI   0(R9),C'B'          TEST FOR B TAPE BOS VERSION          00007700
         BE    CHARCOM             YES SKIP BACK                        00007800
         CLI   0(R9),C'I'          BLANK OUT BARS                       00007900
         BNE   COMP4                                                    00008000
         OI    CONDBIT,X'20'       TURN ON INDICATOR                    00008100
         B     CHARCOM                                                  00008200
COMP4    CLI   0(R9),X'40'         TEST FOR END OF STREAM               00008300
         BC    H+L,ERROR                                                00008400
         MVI   PR1CCW,X'8B'                                             00008500
         TM    CONDBIT,X'02'                                            00008600
         BC    8,GOFF                                                   00008700
         MVC   0(3,R6),=C'999'                                          00008800
         MVC   0(3,R7),=C'999'                                          00008900
         LA    R7,3(0,R7)                                               00009000
         LA    R6,3(0,R6)                                               00009100
GOFF     ST    R6,POINTER          SET POINTER FOR STACK                00009200
         C     R6,ADDR6            FIND IF ANYTHING IN STACK            00009300
         BC    L+H,STARTPT         IF NOT GO PRINT                      00009400
         MVC   0(3,R6),=C'001'     STACK IN 1 AND 999                   00009500
         MVC   0(3,R7),=C'999'                                          00009600
         BC    A,STARTPT           GO START PRINT                       00009700
ERROR    WTO  'INVALID REQUEST'                                         00009800
         BC    A,START                                                  00009900
NUMB     LA    R9,1(R9)            ADD ONE TO BUFFER POINTER            00010000
         LA    R5,1(0,R5)          ADD ONE TO NUMBER COUNTER            00010100
         CLI   0(R9),C'0'          TEST FOR NUMBER                      00010200
         BC    L,FUTHER            IF NOT GET OUT AND PROCESS           00010300
         OI    CONDBIT,X'10'       SET BIT FOR COUNT                    00010400
         BC    A,NUMB                                                   00010500
FUTHER   CLI   0(R9),C'T'          INDICATES WILL BE XXXTOXXX           00010600
         BC    E,STACKNUM                                               00010700
         CLI   0(R9),C','          TEST FOR A COMMA                     00010800
         BE    STACK2    IF YES THEN WILL BE FORM XXX,XXX OR XXX,D      00010900
         BC    A,ERROR             GO TO ERROR IF NOT ABOVE             00011000
STACK2   BAL   R3,MOVE6            GO TO ROUTINE TO LOAD LOW            00011100
         MVC   0(3,R7),0(R6)       TO NUMBER STACKS                     00011200
         LA    R7,3(0,R7)          ADD TO REG7                          00011300
         LA    R6,3(0,R6)          ADD TO REG6                          00011400
         XI    CONDBIT,X'10'                                            00011500
         LR    R5,R10              SET REG5 TO ZERO                     00011600
         BC    A,CHARCOM+4                                              00011700
MOVECHAR MVC   0(0,R4),0(R9)                                            00011800
MOVEHIGH MVC   0(0,R4),0(R9)                                            00011900
STACKNUM BAL   R3,MOVE6            GO TO STACK ROUTINE                  00012000
         LA    R9,2(0,R9)          ADD TO R9 TO BYPASS 'O'              00012100
         LR    R5,R10                                                   00012200
         BC    A,ADD55             BRANCH AROUND REG INST.              00012300
ADD5     LA    R5,1(0,R5)          TEST FOR NEW PAGE NUMBER             00012400
         LA    R9,1(0,R9)                                               00012500
ADD55    CLI   0(R9),C'0'          AND FIND LENGHT                      00012600
         BC    H+E,ADD5                                                 00012700
         CLI   0(R9),C'E'          TEST FOR 'E' IN TEXT                 00012800
         BC    E,SETEND                                                 00012900
         MVI   BYPASSMV+1,X'00'    MAKE BRANCH TO NOP INORDER TO MOVE   00013000
         BAL   R3,MOVE6            PAGE NUMBER TO HIGH STACK            00013100
         MVI   BYPASSMV+1,X'F0'    RESTORE BRANCH                       00013200
RETEND   LR    R5,R10                                                   00013300
         LA    R6,3(0,R6)                                               00013400
         LA    R7,3(0,R7)                                               00013500
         XI    CONDBIT,X'10'       TURN OFF COUNT BIT                   00013600
         BC    A,CHARCOM+4                                              00013700
SETEND   MVC   0(3,R7),=C'999'                                          00013800
         LA    R9,3(0,R9)          UP R9 BY THREE TO GO BT ED           00013900
         BC    A,RETEND                                                 00014000
MOVE6    SR    R9,R5               THIS ROUTINE IS USED T O MOVE PAGE   00014100
         L     R4,THREE            LOAD CONSTANT THREE INTO R4          00014200
         SR    R4,R5               SUBTRACT NUMBER COUNT +1 FROM THREE  00014300
         SR    R5,R11                                                   00014400
         LTR   5,5                 TEST FOR INPUT OVERFLOW              00014500
         BC    4,ERROR             MBRANCH IF -                         00014600
BYPASSMV BC    A,MOVE66            BYPASS MOVE FOR REG7                 00014700
         AR    R4,R7                                                    00014800
         EX    R5,MOVEHIGH         MOVE PAGE NO TO HIGH STACK           00014900
         BC    A,AROUND1                                                00015000
MOVE66   AR    R4,R6                                                    00015100
         EX    R5,MOVECHAR         MOVE PROPER NUMBER                   00015200
AROUND1  AR    R9,R5               RESTORE REG 9 TO ORGINAL COND.       00015300
         AR    R9,R11              RETURN REG. 9 TO ORG STATE           00015400
         BCR   A,R3                RETURN TO CALLER                     00015500
PRIN3    DS    C                                                        00015600
*  CONDBIT BYTE IS USED TO INDICATE CONDICTIONS IN THE PROGRAME         00015700
*   BIT 0 IF ON THEN TYPE WRITER NEEDS ATTENTION                        00015800
*   BIT 1 IF ON THEN LINE ONE HAS BEEN PROCESSED                        00015900
*   BIT 2 NOT USED                                                      00016000
*   BIT 3 NOT USED                                                      00016100
*   BIT 4 NOT USED                                                      00016200
*   BIT 5 IF ON SUPRESS CONTROL CHARACTERS                              00016300
*   BIT 6 IF ON PRINT ONLY CHANGED PAGES                                00016400
*   BIT 7 DOUBLE SPACE BODY OF TEXT                                     00016500
CONDBIT  DC    X'00'                                                    00016600
BLANKS   DC    X'4040404040404040404040'   USED TO BLANK OUT CONTROLS   00016700
STARTPT  L     R9,BUFFER1          LOAD ADDRESS OF FIRST BUFF           00016800
         LA    R6,LOW                                                   00016900
         LA    R7,HIGH                                                  00017000
         TM    CONDBIT,X'80'       TEST FOR CLOSED FILE ON END JOB      00017100
         BC    1,START                                                  00017200
OP       BC    0,OP2                                                    00017300
         OPEN  (DCB1,(INPUT))                                           00017400
   OPEN  (DCBPRT,(OUTPUT))                                              00017500
         MVI    OUTPUT,X'8B'       ISSUE SKIP TO CHANNEL 1              00017600
         WRITE  DECBPRT,SF,DCBPRT,OUTPUT                                00017700
         CHECK   DECBPRT                                                00017800
         BC    A,GT                                                     00017900
OP2      OPEN  (DCB2,(INPUT))                                           00018000
GT       BAL   R3,GETAPE           GO GET RECORD                        00018100
TEST9    TM    PRIN3,X'01'         IF PRINT NEEDED GO PRINT             00018200
         BC    8,PRINT1            IF NOT BYPASS                        00018300
         NI    PRIN3,X'FE'         TURN OFF PRINT BIT                   00018400
         WRITE  DPRT,SF,DCBPRT,OUTPUT                                   00018500
         CHECK DPRT                                                     00018600
BRANCH   BC    0,FINALR            USED FOR END ROUTINE                 00018700
PRINT1   CLI   0(R9),C'1'          TEST FOR FIRST LINE                  00018800
         BC    8,CLBIT             OF PAGE                              00018900
         TM    CONDBIT,X'40'       SEE IF LINE 1 PROCESSED              00019000
         BC    1,SETLINE           YES GO TO TEST FOR BLANK             00019100
         BC    A,UPREG9                                                 00019200
CLBIT    NI    CONDBIT,X'BF'       TURN OFF LINE ONE BIT                00019300
BRANCH3  BC    0,AROUND            BRANCH AROUND BLANK LINE TEST        00019400
         TM    CONDBIT,X'02'                                            00019500
         BC    8,GNOP                                                   00019600
         CLI   4(R9),C'C'                                               00019700
         BC    H+L,GNOP                                                 00019800
         BC    A,SETPAGE                                                00019900
GNOP     CLC   1(3,R9),0(R7)       TEST FOR HIGH BOUND                  00020000
         BC    H,UPREG6            GO TO UP REG6                        00020100
         CLC   1(3,R9),0(R6)                                            00020200
         BC    H+E,SETPAGE                                              00020300
AROUND   CLC   1(3,R9),BLANKS      TEST FOR BLANK PAGE                  00020400
         BNE   UPREG9                                                   00020500
         MVI   CONDBIT,X'00'       KILL OFF ANY OPTIONS                 00020600
         BE    SETPAGE             GO PRINT PAGE                        00020700
UPREG9   TM    CONDBIT,X'80'       TEST FOR CLOSED FILE ON END JOB      00020800
         BC    1,START             IF YES GO TO GET TYPEWRITER          00020900
         BAL   R3,GETAPE           GO GET TAPE RECORD                   00021000
         BC    A,TEST9             BRANCH TO CONINUE                    00021100
SETPAGE  OI    CONDBIT,X'40'       TURN ON LINE ONE BIT                 00021200
         NI    CONDBIT,X'EF'       TURN OFF LINE BIT                    00021300
SETLINE  TM    CONDBIT,X'04'       TEST FOR CONTROL BLANK OUT           00021400
         BC    8,UP9                                                    00021500
         MVC   1(11,R9),BLANKS     BLANK OUT CONTROLS                   00021600
         MVC   121(11,R9),BLANKS                                        00021700
UP9      MVC   OUTPUT,BUFF1        MOVE DATA TO PRINT AREA              00021800
         TM    CONDBIT,X'80'       TEST FOR CLOSED FILE ON END JOB      00021900
         BC    1,START                                                  00022000
         BAL   R3,GETAPE           GO GET TAPE RECORD                   00022100
         L     R9,BUFFER1          RESTORE R9 TO BUFFER1 ADDRESS        00022200
*                 FIND CONTROL CHARACTER FOR PRINT LINE                 00022300
FIRSTCOM CLI   0(R9),C' '                                               00022400
         BC    H+L,NEXT1                                                00022500
         MVI   PR1CCW,X'09'        BLANK SPACE                          00022600
         BC    A,LOADST                                                 00022700
NEXT1    CLI   0(R9),C'+'          TEST FOR SUPPRESS SPACE              00022800
         BC    H+L,NEXT2                                                00022900
         MVI   PR1CCW,X'01'        SUPPRESS SPACE                       00023000
         BC    A,LOADST                                                 00023100
NEXT2    CLI   0(R9),C'1'                                               00023200
         BC    H+L,NEXT3                                                00023300
         MVI   PR1CCW,X'89'        CHANNEL1                             00023400
         BC    A,LOADST                                                 00023500
NEXT3    CLI   0(R9),C'0'                                               00023600
         BC    H+L,NEXT4                                                00023700
         MVI   PR1CCW,X'11'        DOUBLE SPACE                         00023800
         BC    A,LOADST                                                 00023900
NEXT4    CLI   0(R9),C'-'          TEST FOR TRIPLE SPACE                00024000
         BC    H+L,NEXT5                                                00024100
         MVI   PR1CCW,X'19'                                             00024200
         TM    CONDBIT,X'20'                                            00024300
         BC    8,LOADST                                                 00024400
         TM    CONDBIT,X'10'       IS THIS BIT ON                       00024500
         BC    1,LOADST                                                 00024600
         OI    CONDBIT,X'10'       TURN ON BIT                          00024700
         PACK  LEFT,1(3,9)                                              00024800
         CVB   4,LEFT              CONVERT TO INTEGER                   00024900
         LA    10,3(0,0)           UP POINTER BY 2                      00025000
         SR    4,10                                                     00025100
         PACK  LEFT,129(3,9)                                            00025200
         CVB   10,LEFT                                                  00025300
         LA    10,1(0,10)                                               00025400
         A     10,=A(OUTPUT)                                            00025500
         A     4,=A(OUTPUT)                                             00025600
         BC    A,LOADST                                                 00025700
NEXT5    MVI   PR1CCW,X'09'        1 SPACE BY DEFAULT                   00025800
LOADST   OI    PRIN3,1                                                  00025900
LOADSET  TM    CONDBIT,X'20'       IS BAR SUP ON                        00026000
         BC    8,TURNON            NO BYPASS SUPPRESS                   00026100
         MVC   0(2,4),BLANKS       TURN OFF BAR                         00026200
         MVC   0(2,10),BLANKS      TURN OFF BAR                         00026300
TURNON   OI    PRIN3,1             TURN ON PRINT SW                     00026400
         CLI   PR1CCW,X'09'        IF SKIP TO 1 GO BACK                 00026500
         BC    H+L,TEST9           AND START OVER                       00026600
         TM    CONDBIT,X'01'       TEST FOR DOUBLE SPACE                00026700
         BC    8,TEST9                                                  00026800
         MVI   PR1CCW,X'11'        LOAD DOUBLE SPACE                    00026900
         BC    A,TEST9                                                  00027000
UPREG6   LA    R6,3(0,R6)          UP REG 6                             00027100
         L     R5,POINTER          LOAD 5 WITH END OF STACK POINTER     00027200
         LA    R7,3(0,R7)                                               00027300
         CR    R7,R5               COMPARE FOR END STACK                00027400
         BC    L,CLBIT                                                  00027500
         MVI   BRANCH3+1,X'F0'                                          00027600
         BC    A,BRANCH3                                                00027700
FINALR   BAL   R3,CFILE                                                 00027800
         MVI   BRANCH+1,X'00'      RETURN TO NPO                        00027900
         BC    0,START             MAKE INTO BRANCH AFTER TEST          00028000
         L     13,SAVNEXT+4                                             00028100
ENDTAPE   RETURN  (14,12)                                               00028200
GETAPE   BC    0,GET2              GET TAPE ROUTINE                     00028300
         READ  DDECB1,SF,DCB1,BUFF1                                     00028400
         CHECK  DDECB1                                                  00028500
         BCR   A,R3                                                     00028600
GET2     READ  DDECB2,SF,DCB1,BUFF1                                     00028700
         CHECK DDECB2                                                   00028800
         BCR   A,R3                                                     00028900
CFILE    BC    0,CFILE2            CLOSE FILE ROUTINE                   00029000
         CLOSE  (DCB1,DISP)                                             00029100
         CLOSE  (DCBPRT)                                                00029200
         BCR   A,R3                                                     00029300
CFILE2   CLOSE  (DCB2,DISP)                                             00029400
         BCR   A,R3                                                     00029500
         LTORG                                                          00029600
POINTER  DS    F                                                        00029700
THREE    DC    1F'3'                                                    00029800
ZERO     DC    X'00000000'         ZERO WORD                            00029900
LEFT     DS    D                                                        00030000
ADDR6    DC    A(LOW)              CONTENTS OF R6 AT START              00030100
ETINPUT  DC    A(TLAST)                                                 00030200
DCBPRT   DCB   DSORG=PS,MACRF=W,DEVD=DA,RECFM=FBM,DDNAME=T360PNT        00030300
DCB1     DCB   DSORG=PS,MACRF=R,DDNAME=T360PT,DEVD=DA,EODAD=FINALR      00030400
DCB2     DCB   DSORG=PS,MACRF=R,DDNAME=T360PT,DEVD=DA,EODAD=FINALR      00030500
         END    FOREAL                                                  00030600
