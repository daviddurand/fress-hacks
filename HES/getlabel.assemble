:READ  GETLABEL ASSEMBLE C1 WORK    3/26/19  21:59
DSECT    DSECT                                                          00000100
POINT    DS    3F                 SAVE NAME OF PAGE DELETED LABEL IS ON 00000200
LABEL    DS    CL6                SAVE DELETED LABEL                    00000300
**********************************************************************  00000400
*                                                                    *  00000500
*       BEGINNING BUFFER ADDRESS      *        SIX BYTES OF LABEL    *  00000600
*       OF LABEL                      *                              *  00000700
*                                                                    *  00000800
*********************************************************************** 00000900
*                                                                    *  00001000
*       LAST FOUR BYTES OF LABEL (OVERFLOW FROM ABOVE)               *  00001100
*                                                                    *  00001200
*********************************************************************** 00001300
*                                                                    *  00001400
*       DISPLACEMENT OF THIS LABEL FROM TOP OF LABEL TABLE           *  00001500
*                                                                    *  00001600
**********************************************************************  00001700
GETLABEL ENTER                                                          00001800
         SR    1,1              PREPARE R1 SO GETTAB PRESERVES LABTABLE 00001900
         L     15,=V(GETTAB)                                            00002000
         BALR  14,15            CALL GETTAB;UPON RETURN R1 POINTS TO LA 00002100
        ST    1,TABADD           SAVE CURRENT ADDR OF LABEL TABLE       00002200
         L     2,=V(DISPLAY)    POINT TO DISPLAY BUFFER IN CORE         00002300
         ST    2,TOPADD         SAVE IT TO FIND DISPLAY'S LENGTH        00002400
         LA    2,10(2)          INCREMENT PAST GRAPHIC ORDERS           00002500
         ST    2,BUFFPTR        POINT INTO BUFFER WHEN BUILDING DISPLAY 00002600
         L     5,0(1)           LOAD PRESENT LABTABLE LENGTH            00002700
         S     5,=F'4'          IS IT JUST ONE WORD?                    00002800
         BC    8,NOLABELS       IF SO, THEN DISPLAY "NO LABELS" MESSAGE 00002900
         L     7,=V(DISPLMAP)                                           00003000
         L     7,8(7)           POINT TO WHAT WILL BE MAP OF DISPLAYED  00003100
         ST    7,MAPPTR         SAVE THIS PTR TO TOP OF DISPLAY MAP     00003200
         AR    5,1              POINT TO BOTTOM OF LABTABLE FOR USE IN  00003300
         LA    4,12             LOAD INCREMENT OF BXLE LOOP             00003400
         LA    1,4(1)           POINT R1 TO FIRST LABEL IN TABLE        00003500
         LA    6,SIZECHEK       RETRIEVE ONLY ENOUGH LABELS TO FIT ON S 00003600
        LA    9,4                DISP OF FIRST LABEL IN TABLE           00003700
*        LOOPA COUNTS LABELS AS IT MOVES THEM FROM LABTABLE INTO DISPLA 00003800
LOOPA    CLI   4(1),X'00'       IS LABEL INTERNAL AND NOT USER DEFINED? 00003900
         BC    8,CLOCK          IF SO, BRANCH                           00004000
         MVC   2(6,7),0(1)      IF NO, MOVE LABEL TO DISPLAY MAP        00004100
        ST    9,8(7)             PUT LABEL TABLE DISP IN DISPL MAP      00004200
        LA    7,12(7)            POINT TO NEXT ENRTY IN MAP             00004300
         BCT   6,CLOCK          NO MORE LABELS ABLE TO BE DISPLAYED?    00004400
         B     DONE             IF SO, FALL OUT OF LOOPA                00004500
CLOCK    LA    9,12(9)            INCREMENT INDEX ON LABEL TABLE        00004600
        BXLE  1,4,LOOPA          CLOCK THE COUNTER.  AT END OF TABLE?   00004700
DONE     MVI   0(7),X'FF'       IF SO, FLAG END OF MAP WITH A 'FF'      00004800
         LA    5,SIZECHEK                                               00004900
         SR    5,6              R5 CONTAINS NUMBER OF LABELS TO BE DISP 00005000
         BC    8,NOLABELS       BRANCH IF NO USER LABELS                00005100
         ST    5,SCRATCH                                                00005200
         SR    4,4              CLEAR R4 FOR DIVISION                   00005300
         LA    6,MOD            MOD EQUALS NUMBER OF COLUMNS * 3        00005400
         DR    4,6                                                      00005500
         LA    5,1(5) R5 NOW CONTAINS NUMBER OF TIMES TO BUFFER 3 LINES 00005600
         L     6,=V(BLANKS)                                             00005700
LOOPB    MVC   0(222,2),0(6)    MOVE THREE SCOPE LINES OF BLANKS INTO   00005800
         LA    2,222(2)         INCREMENT PTR INTO DISPLAY BUFFER       00005900
         BCT   5,LOOPB                                                  00006000
         SR    4,4              CLEAR R4 FOR DIVISION                   00006100
         L     5,SCRATCH        LOAD NUMBER OF LABELS                   00006200
         LA    6,NUMCOLS        LOAD NUMBER OF COLUMNS                  00006300
         DR    4,6                                                      00006400
         LTR   5,5                                                      00006500
         BC    6,*+12           IF R5 IS ZERO, THEN...                  00006600
         LA    5,1              ...SET IT TO ONE                        00006700
         LR    6,4              ...AND LOAD REMAINDER INTO R6           00006800
         SR    4,4              ...AND CLEAR R4                         00006900
*        R6 CONTAINS NUMBER OF COLUMNS TO BE DISPLAYED                  00007000
*        R5 CONTAINS THE LEAST MAXIMUM NUMBER OF LABELS A COLUMN WILL   00007100
*        R4 CONTAINS THE NUMBER OF COLS THAT WILL HAVE 1 MORE THAN THE  00007200
         ST    4,SCRATCH                                                00007300
         ST    5,NUMINCOL                                               00007400
         L     2,BUFFPTR        POINT TO BUFFER                         00007500
         L     7,MAPPTR         POINT TO DISPLAY MAP                    00007600
         L     3,=V(GDCB)                                               00007700
         LH    3,16(3)                                                  00007800
         LA    3,3000(3)        LOAD SCOPE BUFFER ADDRESS OF TOP OF DIS 00007900
         ST    3,SCOPPTR                                                00008000
         LA    1,NORMALLY                                               00008100
*        LOOPC MOVES LABELS FROM MAP INTO CORE BUFFER AND STORES...     00008200
*        ...THEIR SCOPE BUFFER ADDRESSES BACK INTO THE DISPLAY MAP      00008300
LOOPC    MVC   0(6,2),2(7)      MOVE LABEL INTO BUFFER                  00008400
         STH   3,0(7)           STORE SCOPE BUFFER ADDRESS BACK INTO MA 00008500
         LA    7,12(7)            POINT AT NEXT ENTRY IN DISPLAY MAP    00008600
         BR    1                                                        00008700
NORMALLY BCT   5,SAMECOL        ARE WE STILL ADDING LABELS TO SAME COLU 00008800
         LTR   4,4              IF NO, IS THIS A COLUMN THAT TAKES 1 EX 00008900
         BC    8,NEXTCOL        IF NO, PREPARE POINTERS TO NEXT COLUMN  00009000
         BCT   4,*+12           IS THIS THE LAST OF SUCH COLUMNS?       00009100
         LA    1,BUFFERG1 IF SO, PREPARE TO ADD GRAPHIC ORDER RIGHT HER 00009200
         B     SAMECOL                                                  00009300
         LA    1,NEXTCOL                                                00009400
SAMECOL  LA    2,74(2) IF SAME COL, INCREMENT BUFFER PTRS BY 1 SCOPE LI 00009500
         LA    3,74(3)                                                  00009600
         B     LOOPC                                                    00009700
NEXTCOL  BCT   6,KEEPON         BRANCH IF MORE COLUMNS YET TO DO        00009800
         X     6,SCRATCH                                                00009900
         BC    4,WRITEIT        HAS GRAPHIC ORDER BEEN ADDED?           00010000
         LA    1,WRITEIT        IF NO, FALL HERE                        00010100
         B     BUFFERG1+4                                               00010200
KEEPON   L     2,BUFFPTR        POINT INTO FIRST LINE OF DISPLAY        00010300
         LA    2,SPACE(2)       INCREMENT PTR TO NEXT COLUMN'S POSITION 00010400
         ST    2,BUFFPTR                                                00010500
        L     3,SCOPPTR                                                 00010600
         LA    3,SPACE(3)       LIKEWISE, INCREMENT SCOPE BUFFER ADDRES 00010700
         ST    3,SCOPPTR                                                00010800
         L     5,NUMINCOL       RELOAD NUMBER OF LABELS PER COLUMN      00010900
         LA    1,NORMALLY                                               00011000
         B     LOOPC                                                    00011100
BUFFERG1 LA    1,NEXTCOL                                                00011200
         ST    2,SCRATCH                                                00011300
         TM    SCRATCH+3,X'01'                                          00011400
         BC    8,HALFWORD       MAKE SURE GRAPHIC ORDER IS HALFWORD ALI 00011500
         LA    2,1(2)                                                   00011600
HALFWORD L     9,=V(GTRU1)                                              00011700
         MVC   6(4,2),0(9)      MOVE ORDER INTO CORE BUFFER             00011800
         LA    2,10(2) INCREMENT R2 BY LENGTH OF LAST LABEL + LENGTH OF 00011900
         S     2,TOPADD         FIND LENGTH OF DISPLAY, INCLUDING ORDER 00012000
         ST    2,TOPADD                                                 00012100
         BR    1                                                        00012200
WRITEIT  L     6,TOPADD         R6 TO CONTAIN DISPLAY LENGTH UPON EXIT  00012300
         L     13,4(13)                                                 00012400
         ST    6,24(13)                                                 00012500
         LM    14,12,12(13)                                             00012600
         BR    14               EXIT, HAVING COMPLETED LABEL DISPLAY    00012700
NOLABELS MVC   0(64,2),NOLABMES MOVE MESSAGE IF NO USER LABELS          00012800
         LA    2,58(2)                                                  00012900
         B     KEEPON-8         GO ADD GRAPHIC ORDER                    00013000
         DROP  13                                                       00013100
         EJECT                                                          00013200
**********                                                              00013300
*****          INPUT R1 => POINT  (SAVE LABEL AND IT'S PAGE FOR REVERT) 00013400
*****    THIS IS TO SAVE THE DELETED LABEL SO IT CAN BE REINSERTED      00013500
*              IF THE USER HITS THE CANCEL KEY                          00013600
         ENTRY DELELAB                                                  00013700
DELELAB STM   14,12,12(13)       SAVE CALLER'S REGS                     00013800
        LR    14,15              SET UP NEW BASE REG                    00013900
        USING DELELAB,14         ESTABLISH DADDR                        00014000
        LA    15,WHICHLAB        ROUTINE TO SEARCH DM AND FIND LP'ED    00014100
         BAL   9,WHICHLAB+8       GO SEARCH DM                          00014200
*        R7 NOW POINTS AT DM ENTRY OF LP'ED LABEL                       00014300
         LR    2,1                SAVE ADDR OF PARAM LIST               00014400
        L     1,TABADD           R1 => TOP OF LABEL TABLE               00014500
        L     3,0(1)             R3 HAS LENTH OF LABEL TABLE            00014600
         S     3,=F'12'           MINUS LENTH USED BY LABEL JUST DELETE 00014700
         ST    3,0(1)             RESET LENTH OF TABLE                  00014800
        S     3,8(7)             LEN OF TABLE(MINUS SPACE USED BY       00014900
*                                LABEL DELETED) MINUS DISP TO HIT       00015000
*                                LABEL = LEN OF TABLE BELOW HIT LABEL   00015100
*                                = LENTH OF TABLE TO MOVE UP            00015200
         A     1,8(7)             R1 NOW POINTS AT O MOVE UP          K 00015300
         USING DSECT,2            ESTAB ADDR FOR DSECT                  00015400
         MVC   LABEL(6),0(1)      SAVE DELETED LABEL                    00015500
         MVC   POINT(4),8(1)      SAVE NAME OF PAGE IT IDS ON           00015600
         DROP  2                                                        00015700
CLOSEUP  CH    3,=H'256'          LENTH TO MOVE > 256                   00015800
         BNH   ALLCLOSE           BRANCH IF <256 LEFT TO MOVE           00015900
        MVC   0(256,1),12(1)     MOVE 256 BYTES OF TABLE UP             00016000
        LA    1,256(1)           INCREMENT TBALE POINTER                00016100
        SH    3,=H'256'          DECR LENTH                             00016200
        B     CLOSEUP            CONTINUE MOVING TABLE UP               00016300
ALLCLOSE LTR   3,3                IF LEN LEFT = 0, DON'T MOVE ANY       00016400
        BE    GOBACK             RETURN TO CALLER                       00016500
        EX    3,FINALCLS         MOVE UP LAST BIT OF TABLE              00016600
        B     GOBACK             RETURN                                 00016700
FINALCLS MVC   0(0,1),12(1)       USED TO MOVE UP LAST. PIECE OF TABLE  00016800
        EJECT                                                           00016900
         ENTRY WHICHLAB         COME HERE AFTER LITEPENNING A LABEL     00017000
**********                                                              00017100
******   DON'T CHANGE THIS TO CLOBBER R1,DELELAB EXPECTS IT INTACT      00017200
**********                                                              00017300
         USING *,15                                                     00017400
WHICHLAB STM   14,12,12(13)         SAVE REGS                           00017500
        LA    9,HIT+2            WHERE TO RETURN AFTER FINDING DM ENT   00017600
*                                OF LABEL THAT WAS LP'ED                00017700
         L     7,MAPPTR         POINT TO DISPLAY MAP                    00017800
         L     2,=V(COMAREA)    POINT TO ADDRESS OF LITEPEN DETECT      00017900
         CLC   6(2,2),0(7)                                              00018000
         BL    TROUBLE          BRANCH IF HE LITEPENNED PROMPT          00018100
        LH    3,6(2)            LOAD ADDRESS OF LITEPEN DETECT          00018200
         LA    2,6              LOAD COMPARISON TOLERANCE               00018300
LOOPY    CLI   0(7),X'FF'       AT END OF LABEL DISPLAY MAP?            00018400
         BC    8,TROUBLE        IF SO, TROUBS!                          00018500
         LR    0,3              RELOAD LITEPEN DETEC ADDRESS            00018600
        SH    0,0(7)             DETECT ADDR MINUS BEGIN ADDR OF THIS   00018700
*                                LABEL                                  00018800
         CLR   2,0              COMPARE WITH TOLERANCE                  00018900
         BC    2,HIT            BRANCH IF TOLERANCE IS MET              00019000
         LA    7,12(7)            OTHERWISE, POINT TO NEXT WORD OF MAP  00019100
         B     LOOPY                                                    00019200
HIT      BR    9                  GO TO WHOEVER REQUESTED DM SEARCH     00019300
         L     2,=V(LABEL)        WHERE TO PASS INFO ABOUT LABEL TO LIN 00019400
         MVC   0(6,2),2(7)      MOVE LABEL FROM MAP                     00019500
GOBACK   LM    14,12,12(13)      RESTORE CALLERS REGS                   00019600
         SR    15,15            RETURN CODE--ALL OKAY                   00019700
         BR    14               EXIT                                    00019800
TROUBLE  LM    14,12,12(13)                                             00019900
         LA    15,4             ERROR RETURN CODE                       00020000
         BR    14               EXIT                                    00020100
TABADD  DS    F                  USED TO SAVE ADDR OF LABEL TABLE       00020200
SCRATCH  DS    F                                                        00020300
TOPADD   DS    F                                                        00020400
NUMINCOL DS    F                                                        00020500
BUFFPTR  DS    F                                                        00020600
MAPPTR   DS    F                                                        00020700
SCOPPTR  DS    F                                                        00020800
NOLABMES DC    C'DUMMY, YOU HAVE NOT DEFINED ANY '                      00020900
         DC    C'USER LABELS YET.  PRESS CANCEL. '                      00021000
         SPACE 10                                                       00021100
*        TO CHANGE NUMBER OF COLUMNS MERELY REPLACE NUMCOLS CARD.       00021200
*        PREFERRED VALUES ARE TWO THRU TEN.                             00021300
*        ELEVEN OR TWELVE MAY BE SPECIFIED, BUT THEN ON DISPLAY THERE   00021400
*        IS NO SPACE BETWEEN LABELS.                                    00021500
*        ONE COLUMN MAY BE SPECIFIED, BUT THIS CHOICE ENTAILS           00021600
*        REMOVING SPACE CARD TO AVOID DIVISION BY ZERO.                 00021700
NUMCOLS  EQU   7                                                        00021800
MOD      EQU   NUMCOLS*3                                                00021900
SIZECHEK EQU   NUMCOLS*48                                               00022000
SPACE    EQU   (74-6*NUMCOLS)/(NUMCOLS-1)+6                             00022100
         END                                                            00022200
